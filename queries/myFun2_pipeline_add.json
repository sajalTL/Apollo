{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "myFun2",
    "fullyQualifiedName": "JSObject1.myFun2",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "pipeline_add",
    "collectionId": "pipeline_add_JSObject1",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n\t\tfor (let i = 0;i<appsmith.store.class_id.length;i++){\n\t\t\tawait Insert_pipeline_class.run({org: appsmith.store.class_id[i]})\t\t\n    }\n\t\tawait CreateAPI.run()\n\t\t\n    .then(() =>  update_status.run().then(() =>  showAlert(\"Pipeline ID \"+Insert_pipeline.data[0].last_insert_id+\" created successfully\") ) )\n    .catch(() => showAlert(\"Error occurred\"))\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n\t\tfor (let i = 0;i<appsmith.store.class_id.length;i++){\n\t\t\tawait Insert_pipeline_class.run({org: appsmith.store.class_id[i]})\t\t\n    }\n\t\tawait CreateAPI.run()\n\t\t\n    .then(() =>  update_status.run().then(() =>  showAlert(\"Pipeline ID \"+Insert_pipeline.data[0].last_insert_id+\" created successfully\") ) )\n    .catch(() => showAlert(\"Error occurred\"))\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "pipeline_add_myFun2",
  "deleted": false,
  "gitSyncId": "6225932e52df83079ac94bc5_6256de989c18654bb5892f2b"
}